stages: # 分段
  - lint
  - install
  - build
  - ci_resp_notify

before_script:
  - eval "$(fnm env)"
  - if [ -f ".nvmrc" ]; then fnm install $(cat .nvmrc) && fnm use $(cat .nvmrc); elif [ -f ".node-version" ]; then fnm install $(cat .node-versio) && fnm use $(cat .node-versio); fi
  - npm install yarn tyarn semantic-release@19.0.5 @semantic-release/changelog@6.0.1 @semantic-release/git@10.0.1 @semantic-release/gitlab@9.5.0 @commitlint/cli@18.6.0 @commitlint/config-conventional@18.6.0 @semantic-release/exec@6.0.3 semantic-release-monorepo@7.0.5 @commitlint/config-angular@18.6.0  @saithodev/semantic-release-backmerge@2.1.2 pnpm@latest-10 -g --registry=https://registry.npmmirror.com

cache: # 缓存
  paths:
    - node_modules

lint:commit:
  tags:
    - lint-commit
  stage: lint
  script:
    - echo "${CI_COMMIT_MESSAGE}" | npx commitlint

install-job:
  tags:
    - npm-install
  stage: install
  only:
    refs:
      - branches@yaozai/vr-space/vr-space-broker
    changes:
      - 'package.json'
  except:
    - develop
  script:
    - pnpm install --registry=https://registry.npmmirror.com

deploy-job:
  tags:
    - npm-build
  stage: build
  only:
    - branches@yaozai/******/****** # 项目名称
  except:
    - develop
  script:
    - npx semantic-release

resp-notify:
  tags:
    - ci_resp_notify
  stage: ci_resp_notify
  script:
    - 'curl -H "Content-Type:application/json" -X POST -d ''{"msg_type":"text","content":{"text":"Pipeline（#''${CI_PIPELINE_ID}''）失败，请检查：''${CI_PIPELINE_URL}'' "}}'' https://open.feishu.cn/open-apis/bot/v2/hook/0886b918-2cde-43f1-9406-3632ce11828a'
  when: on_failure
